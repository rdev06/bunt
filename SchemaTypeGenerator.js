// @bun
var A=Object.create;var{defineProperty:q,getPrototypeOf:C,getOwnPropertyNames:D}=Object;var I=Object.prototype.hasOwnProperty;var N=(u,w,b)=>{b=u!=null?A(C(u)):{};const F=w||!u||!u.__esModule?q(b,"default",{value:u,enumerable:!0}):b;for(let $ of D(u))if(!I.call(F,$))q(F,$,{get:()=>u[$],enumerable:!0});return F};var O=(u,w)=>()=>(w||u((w={exports:{}}).exports,w),w.exports);function Q(u){return function(w){const b=Object.getOwnPropertyNames(w.prototype);for(let F of b){if(F==="constructor")continue;const $=w.prototype[F];w.prototype[F]=async function(...j){return await u.call(this),$.apply(this,j)}}}}var v={title:"This is general Response Schema",bsonType:"object",required:["message"],properties:{message:{bsonType:"string"},refId:{bsontype:"string"}}};class x extends Error{status;meta;constructor(u,w,b){super(u);this.status=w,this.meta=b}}class J extends x{constructor(u){super(u,404)}}function z(u){let w="";if(u.bsonType==="object")for(let b in u.properties){if(b==="_id")continue;let F=K[u.properties[b].bsonType];if(F==="object")F=z(u.properties[b]);w+=` ${b}${!u.required.includes(b)?"?":""} : ${F}, \n`}return"{ \n"+w+"}"}function U(u,w){const $=`
//***** This is auto generated types ***//
import { ObjectId } from 'mongodb';

${[{name:"GeneralResponse",schema:v}].concat(u).map((j)=>`export interface I${j.name} ${z(j.schema)}`).join("\n")}
// *** Please do not touch unless you know what you are doing ***//
`;if(w)return Bun.write(w,$);return $}var K={string:"string",bool:"boolean",objectId:"string",int:"number",double:"number"};export{U as SchemaTypeGenerator,z as Generate};

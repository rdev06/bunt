// @bun
var H=Object.create;var{defineProperty:D,getPrototypeOf:J,getOwnPropertyNames:K}=Object;var L=Object.prototype.hasOwnProperty;var U=(E,x,b)=>{b=E!=null?H(J(E)):{};const j=x||!E||!E.__esModule?D(b,"default",{value:E,enumerable:!0}):b;for(let q of K(E))if(!L.call(j,q))D(j,q,{get:()=>E[q],enumerable:!0});return j};var W=(E,x)=>()=>(x||E((x={exports:{}}).exports,x),x.exports);import{IsOptional as N} from"class-validator";import{getMetadataStorage as F} from"class-validator";function Q(E){class x extends E{constructor(){super(...arguments)}}const b=F().getTargetValidationMetadatas(x,x.name,!0,!1),j=new Set(b?.map((q)=>q.propertyName));return{class:x,keys:j}}function u(E,x,b){const j=F();j.getTargetValidationMetadatas(E,E.name,!0,!1).forEach((z)=>{if(b(z.propertyName))j.addValidationMetadata({...z,target:x})})}function _(E){const x=Q(E);return x.keys.forEach((b)=>{N()(x.class.prototype,b)}),x.class}function $(E,x){class b{}return u(E,b,(q)=>{return x.includes(q)}),b}function A(E,x){class b{}return u(E,b,(q)=>{return!x.includes(q)}),b}function B(E,x){class b extends E{constructor(){super(...arguments)}}return u(x,b,()=>!0),b}export{u as inheritMetaValidators,$ as PickType,_ as PartialType,A as OmitType,B as IntersectionType,Q as GetShallowClass};

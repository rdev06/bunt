// @bun
function y(u){return function(w){const F=Object.getOwnPropertyNames(w.prototype);for(let b of F){if(b==="constructor")continue;const k=w.prototype[b];w.prototype[b]=async function(...q){return await u.call(this),k.apply(this,q)}}}}var x={title:"This is general Response Schema",bsonType:"object",required:["message"],properties:{message:{bsonType:"string"},refId:{bsontype:"string"}}};class j extends Error{status;meta;constructor(u,w,F){super(u);this.status=w,this.meta=F}}class v extends j{constructor(u){super(u,404)}}export{y as UseGuard,v as NotFoundException,j as HttpException,x as GeneralResponse};
